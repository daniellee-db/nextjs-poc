{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/Link';\nimport fetch from 'isomorphic-unfetch';\nimport { Base64 } from 'js-base64';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"Databricks Webinars\"), __jsx(\"ul\", null, props.posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id\n    }, __jsx(Link, {\n      href: {\n        pathname: \"p/[name]\",\n        query: {\n          id: post.id\n        }\n      },\n      as: \"p/\".concat(post.slug)\n    }, __jsx(\"a\", null, post.title.rendered)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var login, password, res, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          login = 'databricks';\n          password = 'BigDataSimple';\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('https://databricks.com/wp-json/wp/v2/webinarlist', {\n            headers: {\n              \"Authorization\": \"Basic \".concat(Base64.encode(\"\".concat(login, \":\").concat(password)))\n            }\n          }));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          posts = _context.sent;\n          console.log(\"posts fetched. count: \".concat(posts.length));\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}